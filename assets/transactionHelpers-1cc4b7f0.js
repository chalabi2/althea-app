import{d as A,b as m}from"./index-e79a515f.js";import{B as u,aL as w,aM as k,aI as f,aJ as g,aK as _}from"./index-8a733990.js";function $(t,e,c){function o(r,a){var s;const i=r;return(s=a.validators)==null?void 0:s.find(n=>n.name===i)}return t.map(r=>{const a=e.find(i=>i.delegation.validator_address===r.operator_address);return{validator:r,userDelegations:a,undelagatingInfo:o(r.operator_address,c)}})}const J=t=>{let e=u.from("0");return t.forEach(c=>{c.balance.denom.includes("aalthea")&&(e=e.add(c.balance.amount))}),e};async function M(t){const e=t+"/cosmos/mint/v1beta1/annual_provisions",c=t+"/cosmos/staking/v1beta1/pool",o={method:"GET",headers:{Accept:"application/json"}},r=await fetch(c,o).then(s=>s.json()).then(s=>parseFloat(s.pool.bonded_tokens)).catch(()=>0);return(await fetch(e,o).then(s=>s.json()).then(s=>parseFloat(s.annual_provisions)).catch(()=>0)/r*100).toFixed(2)}async function j(t){const e=`${t}/cosmos/staking/v1beta1/validators`,c={method:"GET",headers:{Accept:"application/json"}};let o=[],r=[];try{(await(await fetch(e,c)).json()).validators.forEach(s=>{const n={operator_address:s.operator_address,moniker:s.description.moniker,commission:s.commission.commission_rates.rate,tokens:s.tokens};s.jailed?o.push(n):r.push(n)})}catch(a){console.error("Error fetching validators:",a)}return{jailed:o,notJailed:r}}async function x(t,e){var l;const o="althea"+"valcons",r={method:"GET",headers:{Accept:"application/json"}},a=`${e}/cosmos/staking/v1beta1/validators/${t}`,i=await fetch(a,r),{validator:s}=await i.json(),n=(l=s==null?void 0:s.consensus_pubkey)==null?void 0:l.key;if(n){const d=A.sha256(m.fromBase64(n)).slice(0,20);return m.toBech32(o,d)}return""}async function S(t){const e=(await j(t)).notJailed,o="althea"+"valcons",r={method:"GET",headers:{Accept:"application/json"}},a=async s=>{var p;const n=`${t}/cosmos/staking/v1beta1/validators/${s}`,l=await fetch(n,r),{validator:d}=await l.json();return(p=d==null?void 0:d.consensus_pubkey)==null?void 0:p.key},i=[];for(const s of e){const n=await a(s.operator_address);if(n){const l=A.sha256(m.fromBase64(n)).slice(0,20);i.push(m.toBech32(o,l))}}return i}async function B(t){const e=await S(t),c={method:"GET",headers:{Accept:"application/json"}},o=e.map(async i=>{const s=`${t}/cosmos/slashing/v1beta1/signing_infos/${i}`;return(await fetch(s,c)).json()}),r=await Promise.all(o);let a={};return r.forEach((i,s)=>{const n=e[s];if(i.val_signing_info){const{tombstoned:l,missed_blocks_counter:d}=i.val_signing_info,p=parseInt(d,10);a[n]={tombstoned:l,missedBlocks:p}}else a[n]={tombstoned:null,missedBlocks:null}}),a}async function V(t){const e=(await j(t)).notJailed,c={method:"GET",headers:{Accept:"application/json"}};let o=[];for(const r of e){const a=`${t}/cosmos/distribution/v1beta1/validators/${r.operator_address}/slashes`,s=await(await fetch(a,c)).json();s.slashes&&s.slashes.length>0?o.push({validator:r.operator_address,slashes:s.slashes}):o.push({validator:r.operator_address,slashes:[]})}return{slashings:o}}async function R(t){const e=(await j(t)).notJailed,c={},o=e.map(async n=>{const l=await x(n.operator_address,t);return c[n.operator_address]=l,l});await Promise.all(o);const r=await B(t),a=await V(t),i={};return a.slashings.forEach(n=>{i[n.validator]=n.slashes.length}),e.map(n=>{const l=c[n.operator_address],d=r[l];return{moniker:n.moniker,operator_address:n.operator_address,tokens:n.tokens,commission:n.commission,valcons_address:l,missedBlocks:d?d.missedBlocks:0,tombstoned:d?d.tombstoned:!1,slashings:i[n.operator_address]||0,score:0}})}const b="application/json";async function O(t,e,c,o,r,a,i){const s=await f(t,o),n={validatorAddress:e,amount:c,denom:"aalthea"},l=g.createTxMsgDelegate(a,s,r,i,n);return await _(l,s,a,o,t)}async function F(t,e,c,o,r,a,i){const s=await f(t,o),n={validatorAddress:e,amount:c,denom:"aalthea"},l=g.createTxMsgUndelegate(a,s,r,i,n);return await _(l,s,a,o,t)}async function C(t,e,c,o,r,a,i,s){const n=await f(t,c),l={validatorSrcAddress:i,validatorDstAddress:s,amount:e,denom:"aalthea"},d=g.createTxMsgBeginRedelegate(r,n,o,a,l);return await _(d,n,r,c,t)}async function U(t,e,c,o,r,a){const i={validatorAddresses:Array.from(a.map(l=>l.validator.operator_address))},s=await f(t,e),n=g.createTxMsgMultipleWithdrawDelegatorReward(o,s,c,r,i);return await _(n,s,o,e,t)}async function P(t,e){const c=await w(e,t),o=t+k.generateEndpointGetDelegations(c);return await fetch(o,{method:"GET",headers:{Accept:b}}).then(a=>a.json()).then(a=>a.delegation_responses).catch(a=>(console.log(a),[]))}async function N(t,e){const c=await w(e,t),o=t+k.generateEndpointGetUndelegations(c);return await fetch(o,{method:"GET",headers:{Accept:b}}).then(a=>a.json()).then(a=>{let i={},s=[],n=u.from("0");return a.unbonding_responses.forEach(l=>{let d={},p=u.from("0");const{entries:E,validator_address:T}=l;d.name=T;let y=[];E.forEach(h=>{let v={};v.complete_time_stamp=h.completion_time,v.value_of_coin=u.from(h.balance),y.push(v),p=p.add(u.from(h.balance)),n=n.add(u.from(h.balance))}),d.lockouts=y,d.validator_unbonding=p,s.push(d)}),i.total_unbonding=n,i.validators=s,i}).catch(a=>(console.log(a),{total_unbonding:u.from("0")}))}async function L(t){const e=t+"/cosmos/staking/v1beta1/validators?pagination.limit=300";return await fetch(e,{method:"GET",headers:{Accept:b}}).then(o=>o.json()).then(o=>o.validators).catch(o=>(console.log(o),[]))}async function I(t,e){const c=await w(e,t),o=t+k.generateEndpointDistributionRewardsByAddress(c);return await fetch(o,{method:"GET",headers:{Accept:b}}).then(a=>a.json()).then(a=>{let i=u.from("0");return a.total.forEach(s=>{s.denom.includes("aalthea")&&(i=u.from(s.amount.split(".")[0]))}),i}).catch(a=>(console.log(a),u.from("0")))}export{O as a,F as b,C as c,$ as d,j as e,S as f,R as g,V as h,B as i,P as j,I as k,N as l,L as m,M as n,J as o,U as t};
